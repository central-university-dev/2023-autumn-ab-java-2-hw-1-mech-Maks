С помощью `iterator` можно проходить по всем элементам коллекции как в прямом, так и в обратном направлении.
`forEach` может проходить элементы только в прямом порядке.

`forEach` принимает `Consumer action`, т.е мы не можем передать функцию, принимающую 0, 2 или более аргументов
Странный пример: Пусть хотим вывести индексы массива, и решили делать это с помощью `forEach`.
                 Тогда нам придется передавать "ненужную переменную".

Бросаю разные ошибки.

Из документации:
Итераторы, возвращаемые методами `iterator` и `listIterator` класса `Iterator`, являются "fail-fast":
если после создания итератора список будет структурно изменен любым способом, кроме методов `remove` или `add`,
то итератор выбросит исключение `ConcurrentModificationException`.
Таким образом, в случае одновременной модификации итератор быстро и чисто завершает работу, а не рискует получить
произвольное недетерминированное поведение в неопределенное время в будущем.

Итератор позволяет одновременно итерироваться по элементам коллекции и удалять из нее элементы.
Но мы не можем одновременно итерироваться по элементам коллекции с помощью `forEach` и удалять элементы.
[происходит это из-за того что в `forEach` у нас нет прямого доступа к итератору -> modCount "will change unexpectedly"]